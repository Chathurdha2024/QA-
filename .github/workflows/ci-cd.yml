name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  MAVEN_OPTS: -DskipTests=false

jobs:
  # ---------------------------
  # Backend: build & tests (Maven, JUnit, Cucumber)
  # ---------------------------
  backend:
    name: Backend (Maven)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Cache ~/.m2
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build and run backend tests (Maven)
        run: mvn -B clean test package

      - name: Upload backend test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-target
          path: target/

  # ---------------------------
  # Frontend: lint, build (Vite + React)
  # ---------------------------
  frontend:
    name: Frontend (Node)
    runs-on: ubuntu-latest
    needs: backend
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Adjust path if your frontend lives in a subfolder e.g. ./frontend
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Lint frontend
        working-directory: ./frontend
        run: npm run lint
        continue-on-error: false

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: ./frontend/dist

  # ---------------------------
  # Node tests: unit (Mocha/Chai) and BDD (Cucumber)
  # This is for your Node-based test project (you showed a backend-bdd package.json)
  # ---------------------------
  node-tests:
    name: Node tests (Mocha & Cucumber)
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Adjust path where your Node test package.json is located (here I assume ./backend-bdd)
      - name: Install node test deps
        working-directory: ./backend-bdd
        run: npm ci

      - name: Run unit tests (mocha)
        working-directory: ./backend-bdd
        run: npm test

      - name: Run cucumber BDD (if you have feature files)
        working-directory: ./backend-bdd
        run: npm run bdd
        # If you don't have cucumber features, this will be quick or remove this step.

  # ---------------------------
  # Optional: Selenium UI Tests
  # IMPORTANT: These require a small code change (see instructions below) to run headless.
  # ---------------------------
  ui-tests:
    name: Selenium UI tests (optional)
    runs-on: ubuntu-latest
    needs: [node-tests]
    if: ${{ always() }}   # keep optional; remove if you want it required
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Chrome (stable) and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip xvfb libnss3 libgconf-2-4
          # Chrome
          wget -q -O /tmp/chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y /tmp/chrome.deb

      - name: Install chromedriver (npm package present in package.json)
        working-directory: ./backend-bdd
        run: npm ci

      - name: Run Selenium tests under Xvfb (headless)
        working-directory: ./backend-bdd
        # This uses xvfb-run to provide a virtual display; but your selenium script must run Chrome in headless mode (see instructions).
        run: |
          sudo apt-get install -y xvfb
          xvfb-run --auto-servernum --server-args='-screen 0 1280x720x24' npm run selenium || (echo "Selenium tests failed"; exit 1)
        env:
          CI: true

  # ---------------------------
  # Deploy job (placeholder)
  # Add secrets to repo and replace actions as appropriate for your target (Docker Hub / Heroku / Cloud)
  # ---------------------------
  deploy:
    name: Deploy (placeholder)
    runs-on: ubuntu-latest
    needs: [backend, frontend, node-tests]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy step placeholder
        run: |
          echo "All tests passed â€” deploy step goes here."
          echo "Configure this job to push artifacts/image to your cloud provider or Docker Hub."
